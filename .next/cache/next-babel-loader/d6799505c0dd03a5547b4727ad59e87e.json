{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document from 'next/document';\n\nclass CustomDocument extends Document {\n  static async getInitialProps(ctx) {\n    try {\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: initialProps.styles\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n}\n\nexport default CustomDocument;","map":{"version":3,"sources":["C:/Users/jin_a/Desktop/Study/Service/cocstorage-new/src/pages/_document.tsx"],"names":["Document","CustomDocument","getInitialProps","ctx","initialProps","styles","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAA0C,eAA1C;;AAEA,MAAMC,cAAN,SAA6BD,QAA7B,CAAsC;AACrC,eAAaE,eAAb,CAA6BC,GAA7B,EAAmD;AAClD,QAAI;AACH,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACE,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,+BACIC,YADJ;AAECC,QAAAA,MAAM,EAAED,YAAY,CAACC;AAFtB;AAIA,KAPD,CAOE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,YAAMA,KAAN;AACA;AACD;;AAboC;;AAgBtC,eAAeL,cAAf","sourcesContent":["import Document, { DocumentContext } from 'next/document';\n\nclass CustomDocument extends Document {\n\tstatic async getInitialProps(ctx: DocumentContext) {\n\t\ttry {\n\t\t\tconst initialProps = await Document.getInitialProps(ctx);\n\n\t\t\treturn {\n\t\t\t\t...initialProps,\n\t\t\t\tstyles: initialProps.styles\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport default CustomDocument;\n"]},"metadata":{},"sourceType":"module"}